name: Kernel Build

on:
  workflow_dispatch:
    inputs:
      KERNEL_TREE:
        description: 'Kernel Tree'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Tree Branch'
        required: true
      CODENAME:
        description: 'Phone Codename'
        required: true
      CLANG_VERSION:
        type: choice
        description: 'Clang Version'
        default: 'clang-r487747c'
        options: 
        - 'clang-r487747c'
        - 'clang-r510928'
        - 'clang-r522817'
      SEND_NOTIFICATION:
        description: 'Send Notification'
        type: boolean
        default: false
      UPLOAD_TO_RELEASE:
        description: 'Upload to release'
        type: boolean
        default: false

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    
    - name: Display User Inputs
      run: |
        echo "::group::User Environment Variables"
        echo "Kernel Tree: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}"
        echo "Codename: ${{ github.event.inputs.CODENAME }}"
        echo "Clang Version: ${{ github.event.inputs.CLANG_VERSION }}"
        echo "::endgroup::"

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT
        echo "build_title=${{ github.event.inputs.BUILD_TITLE || github.event.inputs.CODENAME }}" >> $GITHUB_OUTPUT
      id: workspace

    - name: Prepare the build environment
      run: |
        sudo apt update -y && sudo apt upgrade -y
        sudo apt install default-jdk git gnupg flex bison gperf build-essential zip curl libc6-dev libncurses-dev libx11-dev libreadline-dev libgl1 libgl1-mesa-dev python3 make sudo gcc g++ bc grep tofrodos python3-markdown libxml2-utils xsltproc zlib1g-dev python-is-python3 libc6-dev libtinfo6 make repo cpio kmod openssl libelf-dev pahole libssl-dev
        git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-msm-redbull-4.19-android14  --depth=1
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android14-release/${{ github.event.inputs.CLANG_VERSION }}.tar.gz -O clang.tar.gz
        mkdir clang
        tar -xf clang.tar.gz -C clang
        echo "tools-folder=$(pwd)" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: tools

    - name: Clone kernel source
      run: |
        git clone --depth=1 ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} kernel_tree
        echo "kernel-folder=$(pwd)/kernel_tree" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: kernel

    - name: Building kernel
      run: | 
        export PATH="${{ steps.tools.outputs.tools-folder }}/aarch64-linux-android-4.9/bin:$PATH"
        export PATH="${{ steps.tools.outputs.tools-folder }}/clang/bin:$PATH"
        export LD_LIBRARY_PATH="${{ steps.tools.outputs.tools-folder }}/clang/lib64:$LD_LIBRARY_PATH}"
        export LD_LIBRARY_PATH="${{ steps.tools.outputs.tools-folder }}/clang/lib:$LD_LIBRARY_PATH}"
        export ARCH=arm64
        export SUBARCH=ARM64
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export CROSS_COMPILE=aarch64-linux-android-
        make O=out CC=clang ${{ github.event.inputs.CODENAME }}_defconfig 
        make O=out CC=clang -j$(nproc --all)  
        echo "elapsed_time=$(echo "$(date +%s)"-"${{ steps.workspace.outputs.start_time }}" | bc)" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.kernel.outputs.kernel-folder }}
      id: build

    - name: Check the output directory before uploading
      run: |
        ls -al ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/

    - name: Upload to Release
      if: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz
        name: ${{ github.event.inputs.CODENAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>Kernel successfully built!</b>, took ${{ steps.build.outputs.elapsed_time }} seconds.
          
          <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
          <b>KernelSU</b>: ${{ steps.workspace.outputs.kernelsu }}
          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/upload-artifact@v4
      if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
      with:
        name: Image.gz
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/Image.gz
        
    - name: Send Telegram notification for success
      uses: appleboy/telegram-action@master
      env: 
        TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      if: ${{ success() && env.TELEGRAM_TO != '' && github.event.inputs.SEND_NOTIFICATION == 'true' }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        disable_web_page_preview: true
        message: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>Kernel successfully built!</b>, took ${{ steps.build.outputs.elapsed_time }} seconds.
          
          <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
          <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        document: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/${{ steps.anykernel.outputs.zipname }}
        format: html

    - name: Send Telegram notification for failure
      uses: appleboy/telegram-action@master
      env: 
        TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      if: ${{ failure() && env.TELEGRAM_TO != '' && github.event.inputs.SEND_NOTIFICATION == 'true' }}
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        disable_web_page_preview: true
        message: |
          <b>${{ steps.workspace.outputs.build_title }}</b>
          <b>Failed building kernel</b>, check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} for more info.
          
          <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
        format: html
      continue-on-error: true
