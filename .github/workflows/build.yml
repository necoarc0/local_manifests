name: Kernel Build

on:
  workflow_dispatch:
    inputs:
      KERNEL_TREE:
        description: 'Kernel Tree'
        required: true
      KERNEL_TREE_BRANCH:
        description: 'Kernel Tree Branch'
        required: true
      CODENAME:
        description: 'Phone Codename'
        required: true
      CLANG_VERSION:
        type: choice
        description: 'Clang Version'
        default: 'clang-r487747c'
        options:
          - 'clang-r487747c'
          - 'clang-r510928'
          - 'clang-r522817'
      SEND_NOTIFICATION:
        description: 'Send Notification'
        type: boolean
        default: false
      UPLOAD_TO_RELEASE:
        description: 'Upload to release'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Display User Inputs
        run: |
          echo "::group::User Environment Variables"
          echo "Kernel Tree: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}"
          echo "Codename: ${{ github.event.inputs.CODENAME }}"
          echo "Clang Version: ${{ github.event.inputs.CLANG_VERSION }}"
          echo "::endgroup::"

      - name: Initialize workspace
        run: |
          mkdir -p workspace
          cd workspace
          echo "workspace-folder=$(pwd)" >> $GITHUB_ENV
          echo "start_time=$(date +%s)" >> $GITHUB_ENV
          echo "build_title=${{ github.event.inputs.CODENAME }}" >> $GITHUB_ENV

      - name: Prepare build environment
        run: |
          sudo apt-get install -y flex build-essential libncurses-dev cpio
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android-msm-redbull-4.19-android14 --depth=1
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android14-release/${{ github.event.inputs.CLANG_VERSION }}.tar.gz -O clang.tar.gz
          mkdir clang
          tar -xf clang.tar.gz -C clang
          echo "tools-folder=$(pwd)" >> $GITHUB_ENV

      - name: Clone kernel source
        run: |
          git clone ${{ github.event.inputs.KERNEL_TREE }} -b ${{ github.event.inputs.KERNEL_TREE_BRANCH }} workspace/kernel
          echo "kernel-folder=$(pwd)/workspace/kernel" >> $GITHUB_ENV

      - name: Build kernel
        run: |
          export PATH="${{ env.tools-folder }}/aarch64-linux-android-4.9/bin:$PATH"
          export PATH="${{ env.tools-folder }}/clang/bin:$PATH"
          export LD_LIBRARY_PATH="${{ env.tools-folder }}/clang/lib64:$LD_LIBRARY_PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export CROSS_COMPILE=aarch64-linux-android-
          cd workspace/kernel
          make O=out CC=clang ${{ github.event.inputs.CODENAME }}_defconfig
          make O=out CC=clang -j$(nproc --all)
          echo "elapsed_time=$(echo "$(date +%s)"-"${{ env.start_time }}" | bc)" >> $GITHUB_ENV

      - name: Check output directory
        run: |
          ls -al ${{ env.kernel-folder }}/out/arch/arm64/boot/

      - name: Upload to Release
        if: ${{ github.event.inputs.UPLOAD_TO_RELEASE == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.kernel-folder }}/out/arch/arm64/boot/Image.gz
          name: ${{ github.event.inputs.CODENAME }}-${{ github.run_id }}
          tag_name: ${{ github.run_id }}
          body: |
            <b>${{ env.build_title }}</b>
            <b>Kernel successfully built!</b>, took ${{ github.run_id }} seconds.
            <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
            <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: ${{ success() && github.event.inputs.UPLOAD_TO_RELEASE != 'true' }}
        with:
          name: Image.gz
          path: ${{ env.kernel-folder }}/out/arch/arm64/boot/Image.gz

      - name: Send Telegram notification for success
        uses: appleboy/telegram-action@v1.0.1
        env: 
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
        if: ${{ success() && env.TELEGRAM_TO != '' && github.event.inputs.SEND_NOTIFICATION == 'true' }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          message: |
            <b>${{ env.build_title }}</b>
            <b>Kernel successfully built!</b>, took ${{ github.run_id }} seconds.
            <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
            <b>Action</b>: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          document: ${{ env.kernel-folder }}/out/arch/arm64/boot/Image.gz
          format: html

      - name: Send Telegram notification for failure
        uses: appleboy/telegram-action@v1.0.1
        env: 
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
        if: ${{ failure() && env.TELEGRAM_TO != '' && github.event.inputs.SEND_NOTIFICATION == 'true' }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          message: |
            <b>${{ env.build_title }}</b>
            <b>Failed building kernel</b>, check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} for more info.
            <b>Kernel tree</b>: ${{ github.event.inputs.KERNEL_TREE }}/tree/${{ github.event.inputs.KERNEL_TREE_BRANCH }}
          format: html
        continue-on-error: true
